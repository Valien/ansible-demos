---
  - name: Provision an EC2 Instance
    hosts: local
    connection: local
    gather_facts: True
    tags: provisioning
    # Necessary Variables for creating/provisioning the EC2 Instance
    vars:
      instance_type: t2.micro
      security_group: ansible_sandbox_sg # Change the security group name here
      image: ami-c5062ba0 
      keypair: av_aws_useast2 # This is one of my keys that i already have in AWS
      region: us-east-2 # Change the Region
      count: 1

    # Task that will be used to Launch/Create an EC2 Instance
    tasks:

      - ec2_facts:
      - debug: msg="{{ hostvars[inventory_hostname]['ansible_ec2_instance_id'] }}"

      - name: Create a security group
        local_action: 
          module: ec2_group
          name: "{{ security_group }}"
          description: Security Group for EC2 Servers
          region: "{{ region }}"
          rules:
            - proto: tcp
              from_port: 22
              to_port: 22
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 80
              to_port: 80
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 8080
              to_port: 8080
              cidr_ip: 0.0.0.0/0
          rules_egress:
            - proto: all
              cidr_ip: 0.0.0.0/0
        register: basic_firewall
        tags: build

      - name: Launch the new EC2 Instance
        local_action: ec2 
                      group={{ security_group }} 
                      instance_type={{ instance_type}} 
                      image={{ image }} 
                      wait=true 
                      region={{ region }} 
                      keypair={{ keypair }}
                      count={{count}}
        register: ec2
        tags: build

      - name: Add the newly created EC2 instance(s) to the local host group (located inside the directory)
        local_action: lineinfile 
                      dest="hosts" 
                      regexp={{ item.public_dns_name }} 
                      insertafter="[webserver]" line={{ item.public_dns_name }}
        with_items: ec2.instances.public_dns_name
        tags: build

      - name: Wait for SSH to come up
        local_action: wait_for 
                      host={{ item.public_ip }} 
                      port=22 
                      state=started
        with_items: ec2.instances
        tags: build

      - name: Add tag to Instance(s)
        local_action: ec2_tag resource={{ item.id }} region={{ region }} state=present
        with_items: ec2.instances
        args:
          tags:
            Name: webserver
        tags: build

  - name: Terminate instances
    hosts: localhost
    connection: local
    tasks:
      - name: Terminate instances that were previously launched
        local_action: ec2
                      state='absent'
                      instance_ids='{{ ec2.instance_ids }}'
    tags: terminate

     # hosts: localhost
     # connection: local
     # tasks:
     # - name: Terminate instances that were previously launched
     #   local_action:
     #     ec2
     #     state='absent'
     #     instance_ids='{{ ec2.instance_ids }}'
     #   tags: terminate
      